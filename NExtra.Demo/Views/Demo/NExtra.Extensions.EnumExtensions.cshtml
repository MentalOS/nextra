@model DemoModel

@{
    var newStatus = MessageStatus.New;
    var sentStatus = newStatus.AddFlag(MessageStatus.Sent);
    var noneStatus = newStatus.RemoveFlag(MessageStatus.New);
}

@Model.GetTypeSummary(typeof(EnumExtensions))

<p>@Html.GlobalResource(Resources.Language.CodeSample):</p>

<div class="container code">
  <pre>
var newStatus = MessageStatus.New;
var sentStatus = newStatus.AddFlag(MessageStatus.Sent);
var noneStatus = newStatus.RemoveFlag(MessageStatus.New);

newStatus.HasFlag(MessageStatus.New)      => @newStatus.HasFlag(MessageStatus.New)
newStatus.HasFlag(MessageStatus.Sent)     => @newStatus.HasFlag(MessageStatus.Sent)
newStatus.HasFlag(MessageStatus.Received) => @newStatus.HasFlag(MessageStatus.Received)

sentStatus.HasFlag(MessageStatus.New)      => @sentStatus.HasFlag(MessageStatus.New)
sentStatus.HasFlag(MessageStatus.Sent)     => @sentStatus.HasFlag(MessageStatus.Sent)
sentStatus.HasFlag(MessageStatus.Received) => @sentStatus.HasFlag(MessageStatus.Received)

noneStatus.HasFlag(MessageStatus.New)      => @noneStatus.HasFlag(MessageStatus.New)
noneStatus.HasFlag(MessageStatus.Sent)     => @noneStatus.HasFlag(MessageStatus.Sent)
noneStatus.HasFlag(MessageStatus.Received) => @noneStatus.HasFlag(MessageStatus.Received)</pre>
</div>