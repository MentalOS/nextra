@model DemoModel

@{
    var pageNumberQuery = Request.QueryString["pageNumber"];
    var pageSizeQuery = Request.QueryString["pageSize"];
    var pageLinkMaxCountQuery = Request.QueryString["pageLinkMaxCount"];
    
    var pageNumber = pageNumberQuery.IsNullOrEmpty() ? 1 : int.Parse(pageNumberQuery);
    var pageSize = pageSizeQuery.IsNullOrEmpty() ? 5 : int.Parse(pageSizeQuery);
    var pageLinkMaxCount = pageLinkMaxCountQuery.IsNullOrEmpty() ? 10 : int.Parse(pageLinkMaxCountQuery);
    
    var data = new List<int>();
    for (var i=0; i<95; i++) {
        data.Add(i);
    }
        
    var context = new PaginationContext<int>(data, pageNumber, pageSize, pageLinkMaxCount);
    var result = context.GetPaginationResult();
    
    var pageSizes = new[] { 5, 10, 25, 50 };
    var pageLinkMaxCounts = new[] { 5, 10, 15 };
}

<p class="ingress">
  @Html.GlobalResource(Resources.Language.PaginationContext_TypeSummary)<br/>&nbsp;
</p>

<div class="container">
  <ul class="clean">
    @foreach(var i in result) {<li>@i</li>}
  </ul><br/>
  
  <div>
    @Html.GlobalResource(Resources.Language.ShowMax)
    <select id="selPageSize">
        @foreach(var item in pageSizes) {<option @(item == pageSize ? "selected='selected'" : "")>@item</option>}
    </select>
    @Html.GlobalResource(Resources.Language.ItemsPerPage)
  </div>
  
  <div>
    @Html.GlobalResource(Resources.Language.ShowMax)
    <select id="selPageLinkMaxCount">
        @foreach(var item in pageLinkMaxCounts) {<option @(item == pageLinkMaxCount ? "selected='selected'" : "")>@item</option>}
    </select>
    @Html.GlobalResource(Resources.Language.PageLinks)
  </div>
  
  <hr/>
  
  <div class="align-center">
    @if (context.ShowPreviousPageLink) {<a href="" title="@context.PreviousPageLink" class="page-link">&laquo;</a>}
    @foreach(var item in context.PageLinks) { <a href="" title="@item" class="page-link @(item == pageNumber ? "current" : "")">@item</a> }
    @if (context.ShowNextPageLink) {<a href="" title="@context.NextPageLink" class="page-link">&raquo;</a>}
  </div>
</div>

<script type="text/javascript">
    function gotoPage(page) {
        location.href = "@Model.PostUrl?pageNumber=" + page + "&pageSize=" + $("#selPageSize").val() + "&pageLinkMaxCount=" + $("#selPageLinkMaxCount").val();
    }

    $("#selPageSize").change(function () { gotoPage(1); });
    $("#selPageLinkMaxCount").change(function () { gotoPage(1); });
    $(".page-link").click(function () { gotoPage($(this).attr("title")); return false; });
</script>

<p>@Html.GlobalResource(Resources.Language.CodeSample):</p>

<div class="container code">
  <pre>
var pageNumber = @pageNumber;
var pageSize = @pageSize;
var pageLinkMaxCount = @pageLinkMaxCount;

var data = new List&lt;int&gt;();
for (var i=0; i<95; i++)
    data.Add(i);

var context = new PaginationContext&lt;int&gt;(data, pageNumber, pageSize, pageLinkMaxCount);

context.NextPageLink         => @Json.Encode(context.NextPageLink)
context.PageCount            => @Json.Encode(context.PageCount)
context.PageLinkCount        => @Json.Encode(context.PageLinkCount)
context.PageLinkMaxCount     => @Json.Encode(context.PageLinkMaxCount)
context.PageLinks            => @Json.Encode(context.PageLinks)
context.PageNumber           => @Json.Encode(context.PageNumber)
context.PageSize             => @Json.Encode(context.PageSize)
context.PreviousPageLink     => @Json.Encode(context.PreviousPageLink)
context.ShowNextPageLink     => @Json.Encode(context.ShowNextPageLink)
context.ShowPreviousPageLink => @Json.Encode(context.ShowPreviousPageLink)

context.GetPaginationResult  => @Json.Encode(context.GetPaginationResult())</pre>
</div>