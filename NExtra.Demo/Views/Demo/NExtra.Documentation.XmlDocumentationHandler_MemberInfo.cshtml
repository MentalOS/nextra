@model DemoModel

@{
    var memberInfoName = Request.QueryString["memberInfo"];
    var output = Resources.Language.NotDocumentedMember;
    MemberInfo[] memberInfo = null;
    
    if (!memberInfoName.IsNullOrEmpty())
    {
        try
        {
            memberInfo = typeof(DemoModel).GetMember(memberInfoName);

            var extractor = new XmlDocumentationHandler();
            var documentation = extractor.ExtractMemberInfoXmlDocumentation(memberInfo[0]);
            var sw = new StringWriter();
            var xw = new XmlTextWriter(sw);       
            
            documentation.WriteTo(xw);
            output = sw.ToString();
        }
        catch {}
    }
}

<p>@Html.GlobalResource(Resources.Language.LoadMemberInfoDocumentation):</p>

<div class="container input">
  <select id="selMemberInfo">
    <option>@Html.GlobalResource(Resources.Language.SelectMember)</option>
    @foreach (var info in typeof(DemoModel).GetMembers()) {
    <option @(memberInfoName == @info.Name ? "selected='selected'" : "")>@info.Name</option>
    }
  </select>
  <button class="memberInfo">@Html.GlobalResource(Resources.Language.TryItOut)</button>
</div>

<script type="text/javascript">
    $('button.memberInfo').click(function () { location.href = '@Model.PostUrl?memberInfo=' + $('#selMemberInfo').val() });
</script>

@if (!memberInfoName.IsNullOrEmpty())
{
<p>@Html.GlobalResource(Resources.Language.CodeSample):</p>

<div class="container code">
<pre>
var memberInfo = typeof(DemoModel).GetMember(@Json.Encode(memberInfoName));
var extractor = new XmlDocumentationHandler();
var documentation = extractor.ExtractMemberInfoXmlDocumentation(memberInfo[0]);

//@Html.GlobalResource(Resources.Language.DocumentationOutput):
@output</pre>
</div>
}