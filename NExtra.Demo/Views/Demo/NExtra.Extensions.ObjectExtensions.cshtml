@model DemoModel

@{
    var query1 = Request.QueryString["value1"];
    var query2 = Request.QueryString["value2"];

    var value1 = query1.IsNullOrEmpty() ? "" : query1;
    var value2 = query2.IsNullOrEmpty() ? "" : query2;

    var value = new KeyValuePair<string, string>(value1, value2);
    var clone = value.Clone<KeyValuePair<string, string>>();
}

@Model.GetTypeSummary(typeof(ObjectExtensions))

<p>@Html.GlobalResource(Resources.Language.EnterTwoValuesToExtendObject):</p>

<div class="container input two">
  <input type="text" id="txtValue1" value="@query1" />
  <input type="text" id="txtValue2" value="@query2" />
  <button>@Html.GlobalResource(Resources.Language.TryItOut)</button>
</div>

<script type="text/javascript">
    $("#txtValue1").watermark("@Html.GlobalResource(Resources.Language.EnterValue)");
    $("#txtValue2").watermark("@Html.GlobalResource(Resources.Language.EnterValue)");
    $("button").click(function () { location.href = "@Model.PostUrl?value1=" + $("#txtValue1").val() + "&value2=" + $("#txtValue2").val() });
</script>

<p>@Html.GlobalResource(Resources.Language.CodeSample):</p>

<div class="container code">
  <pre>
var value = new KeyValuePair&lt;string,string&gt;(@Json.Encode(value1), @Json.Encode(value2));
var clone = value.Clone&lt;KeyValuePair&lt;string,string&gt;&gt;();

clone.Key   => @Json.Encode(clone.Key)
clone.Value => @Json.Encode(clone.Value)</pre>
</div>