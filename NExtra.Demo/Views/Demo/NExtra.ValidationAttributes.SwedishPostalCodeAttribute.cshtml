@model DemoModel

@{
    var query = Request.QueryString["value"];
    var value = query.IsNullOrEmpty(false) ? "" : query;

    var requiredNoSpaceAttribute = new SwedishPostalCodeAttribute();
    var requiredSpaceAttribute = new SwedishPostalCodeAttribute(true, true);
    var optionalNoSpaceAttribute = new SwedishPostalCodeAttribute(false);
    var optionalSpaceAttribute = new SwedishPostalCodeAttribute(false, true);
}

@Model.GetTypeSummary(typeof(SwedishPostalCodeAttribute))

<p>@Html.GlobalResource(Resources.Language.EnterValueToValidate):</p>

<div class="container input">
  <input type="text" id="txtValue" value="@query" />
  <button>@Html.GlobalResource(Resources.Language.TryItOut)</button>
</div>

<script type="text/javascript">
    $("#txtValue").watermark("@Html.GlobalResource(Resources.Language.EnterValue)");
    $('button').click(function () { location.href = '@Model.PostUrl?value=' + $('#txtValue').val() + '&spacer' });
</script>

<p>@Html.GlobalResource(Resources.Language.CodeSample):</p>

<div class="container code">
  <pre>
var requiredNoSpaceAttribute = new SwedishPostalCodeAttribute();
var requiredSpaceAttribute = new SwedishPostalCodeAttribute(true, true);
var optionalNoSpaceAttribute = new SwedishPostalCodeAttribute(false);
var optionalSpaceAttribute = new SwedishPostalCodeAttribute(false, true);

requiredNoSpaceAttribute.IsValid(@Json.Encode(value)) => @requiredNoSpaceAttribute.IsValid(value)
requiredSpaceAttribute.IsValid(@Json.Encode(value)) => @requiredSpaceAttribute.IsValid(value)
optionalNoSpaceAttribute.IsValid(@Json.Encode(value)) => @optionalNoSpaceAttribute.IsValid(value)
optionalSpaceAttribute.IsValid(@Json.Encode(value)) => @optionalSpaceAttribute.IsValid(value)</pre>
</div>